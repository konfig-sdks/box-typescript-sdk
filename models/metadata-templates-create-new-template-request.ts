/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { MetadataFieldWrite } from './metadata-field-write';

/**
 * 
 * @export
 * @interface MetadataTemplatesCreateNewTemplateRequest
 */
export interface MetadataTemplatesCreateNewTemplateRequest {
    /**
     * The scope of the metadata template to create. Applications can only create templates for use within the authenticated user\'s enterprise.  This value needs to be set to `enterprise`, as `global` scopes can not be created by applications.
     * @type {string}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'scope': string;
    /**
     * A unique identifier for the template. This identifier needs to be unique across the enterprise for which the metadata template is being created.  When not provided, the API will create a unique `templateKey` based on the value of the `displayName`.
     * @type {string}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'templateKey'?: string;
    /**
     * The display name of the template.
     * @type {string}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'displayName': string;
    /**
     * Defines if this template is visible in the Box web app UI, or if it is purely intended for usage through the API.
     * @type {boolean}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'hidden'?: boolean;
    /**
     * An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list.
     * @type {Array<MetadataFieldWrite>}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'fields'?: Array<MetadataFieldWrite>;
    /**
     * Whether or not to copy any metadata attached to a file or folder when it is copied. By default, metadata is not copied along with a file or folder when it is copied.
     * @type {boolean}
     * @memberof MetadataTemplatesCreateNewTemplateRequest
     */
    'copyInstanceOnItemCopy'?: boolean;
}

