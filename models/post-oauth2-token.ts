/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * A request for a new OAuth 2.0 token
 * @export
 * @interface PostOAuth2Token
 */
export interface PostOAuth2Token {
    /**
     * The type of request being made, either using a client-side obtained authorization code, a refresh token, a JWT assertion, client credentials grant or another access token for the purpose of downscoping a token.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'grant_type': PostOAuth2TokenGrantTypeEnum;
    /**
     * The Client ID of the application requesting an access token.  Used in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'client_id'?: string;
    /**
     * The client secret of the application requesting an access token.  Used in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'client_secret'?: string;
    /**
     * The client-side authorization code passed to your application by Box in the browser redirect after the user has successfully granted your application permission to make API calls on their behalf.  Used in combination with `authorization_code` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'code'?: string;
    /**
     * A refresh token used to get a new access token with.  Used in combination with `refresh_token` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'refresh_token'?: string;
    /**
     * A JWT assertion for which to request a new access token.  Used in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'assertion'?: string;
    /**
     * The token to exchange for a downscoped token. This can be a regular access token, a JWT assertion, or an app token.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'subject_token'?: string;
    /**
     * The type of `subject_token` passed in.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'subject_token_type'?: PostOAuth2TokenSubjectTokenTypeEnum;
    /**
     * The token used to create an annotator token. This is a JWT assertion.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'actor_token'?: string;
    /**
     * The type of `actor_token` passed in.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'actor_token_type'?: PostOAuth2TokenActorTokenTypeEnum;
    /**
     * The space-delimited list of scopes that you want apply to the new access token.  The `subject_token` will need to have all of these scopes or the call will error with **401 Unauthorized**.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'scope'?: string;
    /**
     * Full URL for the file that the token should be generated for.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'resource'?: string;
    /**
     * Used in combination with `client_credentials` as the `grant_type`.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'box_subject_type'?: PostOAuth2TokenBoxSubjectTypeEnum;
    /**
     * Used in combination with `client_credentials` as the `grant_type`. Value is determined by `box_subject_type`. If `user` use user ID and if `enterprise` use enterprise ID.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'box_subject_id'?: string;
    /**
     * Full URL of the shared link on the file or folder that the token should be generated for.
     * @type {string}
     * @memberof PostOAuth2Token
     */
    'box_shared_link'?: string;
}

type PostOAuth2TokenGrantTypeEnum = 'authorization_code' | 'refresh_token' | 'client_credentials' | 'urn:ietf:params:oauth:grant-type:jwt-bearer' | 'urn:ietf:params:oauth:grant-type:token-exchange'
type PostOAuth2TokenSubjectTokenTypeEnum = 'urn:ietf:params:oauth:token-type:access_token'
type PostOAuth2TokenActorTokenTypeEnum = 'urn:ietf:params:oauth:token-type:id_token'
type PostOAuth2TokenBoxSubjectTypeEnum = 'enterprise' | 'user'


