/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EventSourceAllOf } from './event-source-all-of';
import { EventSourceClassification } from './event-source-classification';
import { FileVersionMini } from './file-version-mini';
import { FolderAllOfFolderUploadEmail } from './folder-all-of-folder-upload-email';
import { FolderMini } from './folder-mini';
import { Items } from './items';
import { UserAllOfNotificationEmail } from './user-all-of-notification-email';
import { UserMini } from './user-mini';

/**
 * 
 * @export
 * @interface EventSource
 */
export interface EventSource {
    /**
     * The unique identifier that represent a folder.  The ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://_*.app.box.com/folders/123` the `folder_id` is `123`.
     * @type {string}
     * @memberof EventSource
     */
    'id': string;
    /**
     * `folder`
     * @type {string}
     * @memberof EventSource
     */
    'type': EventSourceTypeEnum;
    /**
     * The name of the folder.
     * @type {string}
     * @memberof EventSource
     */
    'name'?: string;
    /**
     * The primary email address of this user
     * @type {string}
     * @memberof EventSource
     */
    'login'?: string;
    /**
     * The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder.
     * @type {string}
     * @memberof EventSource
     */
    'created_at'?: string | null;
    /**
     * The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder.
     * @type {string}
     * @memberof EventSource
     */
    'modified_at'?: string | null;
    /**
     * The language of the user, formatted in modified version of the [ISO 639-1](https://raw.githubusercontent.com) format.
     * @type {string}
     * @memberof EventSource
     */
    'language'?: string;
    /**
     * The user\'s timezone
     * @type {string}
     * @memberof EventSource
     */
    'timezone'?: string;
    /**
     * The user’s total available space amount in bytes
     * @type {number}
     * @memberof EventSource
     */
    'space_amount'?: number;
    /**
     * The amount of space in use by the user
     * @type {number}
     * @memberof EventSource
     */
    'space_used'?: number;
    /**
     * The maximum individual file size in bytes the user can have
     * @type {number}
     * @memberof EventSource
     */
    'max_upload_size'?: number;
    /**
     * The user\'s account status
     * @type {string}
     * @memberof EventSource
     */
    'status'?: EventSourceStatusEnum;
    /**
     * The user’s job title
     * @type {string}
     * @memberof EventSource
     */
    'job_title'?: string;
    /**
     * The user’s phone number
     * @type {string}
     * @memberof EventSource
     */
    'phone'?: string;
    /**
     * The user’s address
     * @type {string}
     * @memberof EventSource
     */
    'address'?: string;
    /**
     * URL of the user’s avatar image
     * @type {string}
     * @memberof EventSource
     */
    'avatar_url'?: string;
    /**
     * 
     * @type {UserAllOfNotificationEmail}
     * @memberof EventSource
     */
    'notification_email'?: UserAllOfNotificationEmail | null;
    /**
     * The type of the item that the event represents. Can be `file` or `folder`. 
     * @type {string}
     * @memberof EventSource
     */
    'item_type': EventSourceItemTypeEnum;
    /**
     * The unique identifier that represents the item. 
     * @type {string}
     * @memberof EventSource
     */
    'item_id': string;
    /**
     * The name of the item. 
     * @type {string}
     * @memberof EventSource
     */
    'item_name': string;
    /**
     * 
     * @type {EventSourceClassification}
     * @memberof EventSource
     */
    'classification'?: EventSourceClassification;
    /**
     * 
     * @type {FolderMini}
     * @memberof EventSource
     */
    'parent'?: FolderMini | null;
    /**
     * 
     * @type {UserMini}
     * @memberof EventSource
     */
    'owned_by'?: UserMini;
    /**
     * The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened.
     * @type {string}
     * @memberof EventSource
     */
    'etag'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventSource
     */
    'sequence_id'?: string;
    /**
     * The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file.
     * @type {string}
     * @memberof EventSource
     */
    'sha1'?: string;
    /**
     * 
     * @type {FileVersionMini}
     * @memberof EventSource
     */
    'file_version'?: FileVersionMini;
    /**
     * 
     * @type {string}
     * @memberof EventSource
     */
    'description'?: string;
    /**
     * The folder size in bytes.  Be careful parsing this integer as its value can get very large.
     * @type {number}
     * @memberof EventSource
     */
    'size'?: number;
    /**
     * 
     * @type {object}
     * @memberof EventSource
     */
    'path_collection'?: object;
    /**
     * The time at which this folder was put in the trash.
     * @type {string}
     * @memberof EventSource
     */
    'trashed_at'?: string | null;
    /**
     * The time at which this folder is expected to be purged from the trash.
     * @type {string}
     * @memberof EventSource
     */
    'purged_at'?: string | null;
    /**
     * The date and time at which this folder was originally created.
     * @type {string}
     * @memberof EventSource
     */
    'content_created_at'?: string | null;
    /**
     * The date and time at which this folder was last updated.
     * @type {string}
     * @memberof EventSource
     */
    'content_modified_at'?: string | null;
    /**
     * 
     * @type {UserMini}
     * @memberof EventSource
     */
    'created_by'?: UserMini;
    /**
     * 
     * @type {UserMini}
     * @memberof EventSource
     */
    'modified_by'?: UserMini;
    /**
     * 
     * @type {object}
     * @memberof EventSource
     */
    'shared_link'?: object | null;
    /**
     * Defines if this item has been deleted or not.  * `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted.
     * @type {string}
     * @memberof EventSource
     */
    'item_status'?: EventSourceItemStatusEnum;
    /**
     * 
     * @type {FolderAllOfFolderUploadEmail}
     * @memberof EventSource
     */
    'folder_upload_email'?: FolderAllOfFolderUploadEmail | null;
    /**
     * 
     * @type {Items}
     * @memberof EventSource
     */
    'item_collection'?: Items;
}

type EventSourceTypeEnum = 'folder'
type EventSourceStatusEnum = 'active' | 'inactive' | 'cannot_delete_edit' | 'cannot_delete_edit_upload'
type EventSourceItemTypeEnum = 'file' | 'folder'
type EventSourceItemStatusEnum = 'active' | 'trashed' | 'deleted'


