/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AnnotationAllOfDescription } from './annotation-all-of-description';
import { AnnotationAllOfFileVersion } from './annotation-all-of-file-version';
import { AnnotationAllOfPermissions } from './annotation-all-of-permissions';
import { AnnotationBase } from './annotation-base';
import { AnnotationTarget } from './annotation-target';
import { FileActivityUser } from './file-activity-user';
import { Reply } from './reply';

/**
 * 
 * @export
 * @interface AnnotationAllOf
 */
export interface AnnotationAllOf {
    /**
     * 
     * @type {AnnotationAllOfDescription}
     * @memberof AnnotationAllOf
     */
    'description'?: AnnotationAllOfDescription;
    /**
     * When the annotation object was created.
     * @type {string}
     * @memberof AnnotationAllOf
     */
    'created_at'?: string;
    /**
     * 
     * @type {FileActivityUser}
     * @memberof AnnotationAllOf
     */
    'created_by'?: FileActivityUser;
    /**
     * 
     * @type {AnnotationAllOfFileVersion}
     * @memberof AnnotationAllOf
     */
    'file_version'?: AnnotationAllOfFileVersion;
    /**
     * When the annotation object was modified
     * @type {string}
     * @memberof AnnotationAllOf
     */
    'modified_at'?: string;
    /**
     * 
     * @type {FileActivityUser}
     * @memberof AnnotationAllOf
     */
    'modified_by'?: FileActivityUser;
    /**
     * 
     * @type {AnnotationBase}
     * @memberof AnnotationAllOf
     */
    'parent'?: AnnotationBase;
    /**
     * 
     * @type {AnnotationAllOfPermissions}
     * @memberof AnnotationAllOf
     */
    'permissions'?: AnnotationAllOfPermissions;
    /**
     * An array of replies if the annotation has replies, else empty
     * @type {Array<Reply>}
     * @memberof AnnotationAllOf
     */
    'replies'?: Array<Reply>;
    /**
     * status of the annotation
     * @type {string}
     * @memberof AnnotationAllOf
     */
    'status'?: AnnotationAllOfStatusEnum;
    /**
     * 
     * @type {AnnotationTarget}
     * @memberof AnnotationAllOf
     */
    'target'?: AnnotationTarget;
    /**
     * Total replies that are present for the annotation
     * @type {number}
     * @memberof AnnotationAllOf
     */
    'total_reply_count'?: number;
}

type AnnotationAllOfStatusEnum = 'open' | 'resolved' | 'deleted'


