/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { FileVersionMini } from './file-version-mini';
import { FolderAllOfFolderUploadEmail } from './folder-all-of-folder-upload-email';
import { FolderMini } from './folder-mini';
import { Items } from './items';
import { SkillInvocationSourceAllOf } from './skill-invocation-source-all-of';
import { UserMini } from './user-mini';

/**
 * 
 * @export
 * @interface WebhookInvocationSource
 */
export interface WebhookInvocationSource {
    /**
     * The unique identifier that represent a folder.  The ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://_*.app.box.com/folders/123` the `folder_id` is `123`.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'id': string;
    /**
     * The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'etag'?: string | null;
    /**
     * `folder`
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'type': WebhookInvocationSourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'sequence_id'?: string;
    /**
     * The name of the folder.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'name'?: string;
    /**
     * The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'sha1'?: string;
    /**
     * 
     * @type {FileVersionMini}
     * @memberof WebhookInvocationSource
     */
    'file_version'?: FileVersionMini;
    /**
     * 
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'description'?: string;
    /**
     * The folder size in bytes.  Be careful parsing this integer as its value can get very large.
     * @type {number}
     * @memberof WebhookInvocationSource
     */
    'size'?: number;
    /**
     * 
     * @type {object}
     * @memberof WebhookInvocationSource
     */
    'path_collection'?: object;
    /**
     * The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'created_at'?: string | null;
    /**
     * The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'modified_at'?: string | null;
    /**
     * The time at which this folder was put in the trash.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'trashed_at'?: string | null;
    /**
     * The time at which this folder is expected to be purged from the trash.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'purged_at'?: string | null;
    /**
     * The date and time at which this folder was originally created.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'content_created_at'?: string | null;
    /**
     * The date and time at which this folder was last updated.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'content_modified_at'?: string | null;
    /**
     * 
     * @type {UserMini}
     * @memberof WebhookInvocationSource
     */
    'created_by'?: UserMini;
    /**
     * 
     * @type {UserMini}
     * @memberof WebhookInvocationSource
     */
    'modified_by'?: UserMini;
    /**
     * 
     * @type {UserMini}
     * @memberof WebhookInvocationSource
     */
    'owned_by'?: UserMini;
    /**
     * 
     * @type {object}
     * @memberof WebhookInvocationSource
     */
    'shared_link'?: object | null;
    /**
     * 
     * @type {FolderMini}
     * @memberof WebhookInvocationSource
     */
    'parent'?: FolderMini | null;
    /**
     * Defines if this item has been deleted or not.  * `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted.
     * @type {string}
     * @memberof WebhookInvocationSource
     */
    'item_status'?: WebhookInvocationSourceItemStatusEnum;
    /**
     * 
     * @type {FolderAllOfFolderUploadEmail}
     * @memberof WebhookInvocationSource
     */
    'folder_upload_email'?: FolderAllOfFolderUploadEmail | null;
    /**
     * 
     * @type {Items}
     * @memberof WebhookInvocationSource
     */
    'item_collection'?: Items;
}

type WebhookInvocationSourceTypeEnum = 'folder'
type WebhookInvocationSourceItemStatusEnum = 'active' | 'trashed' | 'deleted'


