/* tslint:disable */
/* eslint-disable */
/*
Box Platform API

[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.

The version of the OpenAPI document: 2.0.0
Contact: devrel@box.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { fromBuffer } from "file-type/browser"
const FormData = require("form-data")
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { ClientError } from '../models';
// @ts-ignore
import { RecentItems } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * RecentItemsApi - axios parameter creator
 * @export
 */
export const RecentItemsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns information about the recent items accessed by a user, either in the last 90 days or up to the last 1000 items accessed.
         * @summary List recently accessed items
         * @param {Array<string>} [fields] A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.
         * @param {number} [limit] The maximum number of items to return per page.
         * @param {string} [marker] Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires &#x60;usemarker&#x60; to be set to &#x60;true&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAccessedItems: async (fields?: Array<string>, limit?: number, marker?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/recent_items`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OAuth2Security required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OAuth2Security", [], configuration)
            if (fields) {
                localVarQueryParameter['fields'] = fields.join(COLLECTION_FORMATS.csv);
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (marker !== undefined) {
                localVarQueryParameter['marker'] = marker;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/recent_items',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * RecentItemsApi - functional programming interface
 * @export
 */
export const RecentItemsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = RecentItemsApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns information about the recent items accessed by a user, either in the last 90 days or up to the last 1000 items accessed.
         * @summary List recently accessed items
         * @param {RecentItemsApiListAccessedItemsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAccessedItems(requestParameters: RecentItemsApiListAccessedItemsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RecentItems>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAccessedItems(requestParameters.fields, requestParameters.limit, requestParameters.marker, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * RecentItemsApi - factory interface
 * @export
 */
export const RecentItemsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = RecentItemsApiFp(configuration)
    return {
        /**
         * Returns information about the recent items accessed by a user, either in the last 90 days or up to the last 1000 items accessed.
         * @summary List recently accessed items
         * @param {RecentItemsApiListAccessedItemsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAccessedItems(requestParameters: RecentItemsApiListAccessedItemsRequest, options?: AxiosRequestConfig): AxiosPromise<RecentItems> {
            return localVarFp.listAccessedItems(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listAccessedItems operation in RecentItemsApi.
 * @export
 * @interface RecentItemsApiListAccessedItemsRequest
 */
export type RecentItemsApiListAccessedItemsRequest = {
    
    /**
    * A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.
    * @type {Array<string>}
    * @memberof RecentItemsApiListAccessedItems
    */
    readonly fields?: Array<string>
    
    /**
    * The maximum number of items to return per page.
    * @type {number}
    * @memberof RecentItemsApiListAccessedItems
    */
    readonly limit?: number
    
    /**
    * Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
    * @type {string}
    * @memberof RecentItemsApiListAccessedItems
    */
    readonly marker?: string
    
}

/**
 * RecentItemsApiGenerated - object-oriented interface
 * @export
 * @class RecentItemsApiGenerated
 * @extends {BaseAPI}
 */
export class RecentItemsApiGenerated extends BaseAPI {
    /**
     * Returns information about the recent items accessed by a user, either in the last 90 days or up to the last 1000 items accessed.
     * @summary List recently accessed items
     * @param {RecentItemsApiListAccessedItemsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecentItemsApiGenerated
     */
    public listAccessedItems(requestParameters: RecentItemsApiListAccessedItemsRequest, options?: AxiosRequestConfig) {
        return RecentItemsApiFp(this.configuration).listAccessedItems(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
